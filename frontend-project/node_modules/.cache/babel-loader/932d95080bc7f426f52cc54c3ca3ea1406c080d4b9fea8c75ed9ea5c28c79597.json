{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITU\\\\L3\\\\Test_2M1\\\\frontend-project\\\\src\\\\article\\\\UpdateArticle.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField, Grid, Typography, Paper } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewArticle = ({\n  onUpdate\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const {\n    id_article\n  } = useParams(); // Récupère l'ID de l'article depuis l'URL\n\n  // Utilisation de useEffect pour appeler l'API lorsque l'ID change\n  useEffect(() => {\n    if (id_article) {\n      // Appel de l'API pour obtenir les détails de l'article\n      fetch(`http://localhost:3000/article?${id_article}`).then(response => response.json()).then(data => {\n        console.log(data);\n        // Remplir les champs avec les données reçues\n        setName(data[0].nom_article); // Remplir le nom de l'article\n        setQuantity(data[0].quantity); // Remplir la quantité de l'article\n      }).catch(error => console.error('Erreur :', error));\n    }\n  }, [id_article]); // Déclencher l'effet chaque fois que l'ID change\n\n  const handleUpdate = (name, quantity, id_article) => {\n    fetch('http://localhost:3000/article', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        nom: name,\n        quantite: quantity,\n        id_article: id_article\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Erreur lors de la mise à jour de l\\'article');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Article mis à jour avec succès:', data);\n      // Ajouter une logique ici pour mettre à jour l'UI si nécessaire\n    }).catch(error => {\n      console.error('Erreur API', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\" // Centrer le formulaire\n    ,\n    alignItems: \"center\",\n    style: {\n      minHeight: '100vh'\n    } // Prendre toute la hauteur de la page\n    ,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 6,\n      lg: 4,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          padding: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdate,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Modification Article\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name\",\n                variant: \"outlined\",\n                fullWidth: true,\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Quantity\",\n                variant: \"outlined\",\n                fullWidth: true,\n                value: quantity,\n                onChange: e => setQuantity(e.target.value),\n                type: \"number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                children: \"Modifier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(NewArticle, \"XA9J0GExZ0lKAM3i30UAzKSCAqY=\", false, function () {\n  return [useParams];\n});\n_c = NewArticle;\nexport default NewArticle;\nvar _c;\n$RefreshReg$(_c, \"NewArticle\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","Grid","Typography","Paper","useParams","jsxDEV","_jsxDEV","NewArticle","onUpdate","_s","name","setName","quantity","setQuantity","id_article","fetch","then","response","json","data","console","log","nom_article","catch","error","handleUpdate","method","headers","body","JSON","stringify","nom","quantite","ok","Error","container","justifyContent","alignItems","style","minHeight","children","item","xs","sm","md","lg","elevation","padding","onSubmit","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","spacing","label","fullWidth","value","onChange","e","target","type","color","_c","$RefreshReg$"],"sources":["D:/ITU/L3/Test_2M1/frontend-project/src/article/UpdateArticle.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, TextField, Grid, Typography, Paper } from '@mui/material';\r\nimport { useParams } from 'react-router-dom';\r\n\r\ninterface InsertFormProps {\r\n  onUpdate: (name: string, age: number) => void;\r\n}\r\n\r\nconst NewArticle: React.FC<InsertFormProps> = ({ onUpdate }) => {\r\n  const [name, setName] = useState('');\r\n  const [quantity, setQuantity] = useState<number | string>('');\r\n  const { id_article } = useParams(); // Récupère l'ID de l'article depuis l'URL\r\n\r\n  // Utilisation de useEffect pour appeler l'API lorsque l'ID change\r\n  useEffect(() => {\r\n    if (id_article) {\r\n      // Appel de l'API pour obtenir les détails de l'article\r\n      fetch(`http://localhost:3000/article?${id_article}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            console.log(data);\r\n          // Remplir les champs avec les données reçues\r\n          setName(data[0].nom_article); // Remplir le nom de l'article\r\n          setQuantity(data[0].quantity); // Remplir la quantité de l'article\r\n        })\r\n        .catch((error) => console.error('Erreur :', error));\r\n    }\r\n  }, [id_article]); // Déclencher l'effet chaque fois que l'ID change\r\n\r\n  const handleUpdate = (name: string, quantity: number, id_article: number) => {\r\n    fetch('http://localhost:3000/article', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        nom: name,\r\n        quantite: quantity,\r\n        id_article: id_article,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Erreur lors de la mise à jour de l\\'article');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log('Article mis à jour avec succès:', data);\r\n        // Ajouter une logique ici pour mettre à jour l'UI si nécessaire\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erreur API', error);\r\n      });\r\n  };\r\n  \r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\" // Centrer le formulaire\r\n      alignItems=\"center\"\r\n      style={{ minHeight: '100vh' }} // Prendre toute la hauteur de la page\r\n    >\r\n      <Grid item xs={12} sm={8} md={6} lg={4}>\r\n        <Paper elevation={3} style={{ padding: '20px' }}>\r\n          <form onSubmit={handleUpdate}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Modification Article\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Quantity\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={quantity}\r\n                  onChange={(e) => setQuantity(e.target.value)}\r\n                  type=\"number\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                  Modifier\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewArticle;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,SAAS,EAAEC,IAAI,EAAEC,UAAU,EAAEC,KAAK,QAAQ,eAAe;AAC1E,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM7C,MAAMC,UAAqC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAkB,EAAE,CAAC;EAC7D,MAAM;IAAEiB;EAAW,CAAC,GAAGV,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEpC;EACAN,SAAS,CAAC,MAAM;IACd,IAAIgB,UAAU,EAAE;MACd;MACAC,KAAK,CAAC,iCAAiCD,UAAU,EAAE,CAAC,CACjDE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACnB;QACAR,OAAO,CAACQ,IAAI,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC,CAAC;QAC9BT,WAAW,CAACM,IAAI,CAAC,CAAC,CAAC,CAACP,QAAQ,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACI,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC,CAAC;IACvD;EACF,CAAC,EAAE,CAACV,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElB,MAAMW,YAAY,GAAGA,CAACf,IAAY,EAAEE,QAAgB,EAAEE,UAAkB,KAAK;IAC3EC,KAAK,CAAC,+BAA+B,EAAE;MACrCW,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,GAAG,EAAErB,IAAI;QACTsB,QAAQ,EAAEpB,QAAQ;QAClBE,UAAU,EAAEA;MACd,CAAC;IACH,CAAC,CAAC,CACCE,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACgB,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;MAChE;MACA,OAAOjB,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,IAAI,CAAC;MACpD;IACF,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IACpC,CAAC,CAAC;EACN,CAAC;EAGD,oBACElB,OAAA,CAACL,IAAI;IACHkC,SAAS;IACTC,cAAc,EAAC,QAAQ,CAAC;IAAA;IACxBC,UAAU,EAAC,QAAQ;IACnBC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAQ,CAAE,CAAC;IAAA;IAAAC,QAAA,eAE/BlC,OAAA,CAACL,IAAI;MAACwC,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAL,QAAA,eACrClC,OAAA,CAACH,KAAK;QAAC2C,SAAS,EAAE,CAAE;QAACR,KAAK,EAAE;UAAES,OAAO,EAAE;QAAO,CAAE;QAAAP,QAAA,eAC9ClC,OAAA;UAAM0C,QAAQ,EAAEvB,YAAa;UAAAe,QAAA,gBAC3BlC,OAAA,CAACJ,UAAU;YAAC+C,OAAO,EAAC,IAAI;YAACC,YAAY;YAAAV,QAAA,EAAC;UAEtC;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbhD,OAAA,CAACL,IAAI;YAACkC,SAAS;YAACoB,OAAO,EAAE,CAAE;YAAAf,QAAA,gBACzBlC,OAAA,CAACL,IAAI;cAACwC,IAAI;cAACC,EAAE,EAAE,EAAG;cAAAF,QAAA,eAChBlC,OAAA,CAACN,SAAS;gBACRwD,KAAK,EAAC,MAAM;gBACZP,OAAO,EAAC,UAAU;gBAClBQ,SAAS;gBACTC,KAAK,EAAEhD,IAAK;gBACZiD,QAAQ,EAAGC,CAAC,IAAKjD,OAAO,CAACiD,CAAC,CAACC,MAAM,CAACH,KAAK;cAAE;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACPhD,OAAA,CAACL,IAAI;cAACwC,IAAI;cAACC,EAAE,EAAE,EAAG;cAAAF,QAAA,eAChBlC,OAAA,CAACN,SAAS;gBACRwD,KAAK,EAAC,UAAU;gBAChBP,OAAO,EAAC,UAAU;gBAClBQ,SAAS;gBACTC,KAAK,EAAE9C,QAAS;gBAChB+C,QAAQ,EAAGC,CAAC,IAAK/C,WAAW,CAAC+C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;gBAC7CI,IAAI,EAAC;cAAQ;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACPhD,OAAA,CAACL,IAAI;cAACwC,IAAI;cAACC,EAAE,EAAE,EAAG;cAAAF,QAAA,eAChBlC,OAAA,CAACP,MAAM;gBAAC+D,IAAI,EAAC,QAAQ;gBAACb,OAAO,EAAC,WAAW;gBAACc,KAAK,EAAC,SAAS;gBAACN,SAAS;gBAAAjB,QAAA,EAAC;cAEpE;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAAC7C,EAAA,CA7FIF,UAAqC;EAAA,QAGlBH,SAAS;AAAA;AAAA4D,EAAA,GAH5BzD,UAAqC;AA+F3C,eAAeA,UAAU;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}